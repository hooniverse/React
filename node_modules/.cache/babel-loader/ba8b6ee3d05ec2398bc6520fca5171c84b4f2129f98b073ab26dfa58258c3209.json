{"ast":null,"code":"var _jsxFileName = \"/Users/hooniverse/Desktop/practice-app/src/chapter_12/Calculator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TemperatureInput from \"./TemperatureInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uBB3C\\uC774 \\uB053\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uBB3C\\uC774 \\uB053\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n}\n_c = BoilingVerdict;\nfunction toCelsius(fahrenheit) {\n  return (fagrenheit - 32) * 5 / 9;\n}\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\nfunction tryConvert(temperature, conver) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return \"\";\n  }\n  const output = conver(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\nfunction Calculator(props) {\n  _s();\n  const [temperature, setTemperature] = useState(\"\");\n  const [scale, setScale] = useState(\"C\");\n  const handleCelsiusChange = temperature => {\n    setTemperature(temperature);\n    setScale(\"c\");\n  };\n  const handleFahrenheitChange = temperature => {\n    setTemperature(temperature);\n    setScale(\"f\");\n  };\n  const celsius = scale === \"f\" ? tryConvert(temperature, toCelsius) : temperature;\n  const fahrenheit = scale === \"c\" ? tryConvert(temperature, toFahrenheit) : temperature;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TemperatureInput, {\n      scale: \"c\",\n      temperature: celsius,\n      onTemperatureChange: handleCelsiusChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TemperatureInput, {\n      scale: \"f\",\n      temperature: fahrenheit,\n      onTemperatureChange: handleFahrenheitChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n      celsius: parseFloat(celsius)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Calculator, \"gI6tdZmkfpP6YWran73N0woRx44=\");\n_c2 = Calculator;\nexport default Calculator;\nvar _c, _c2;\n$RefreshReg$(_c, \"BoilingVerdict\");\n$RefreshReg$(_c2, \"Calculator\");","map":{"version":3,"names":["React","useState","TemperatureInput","jsxDEV","_jsxDEV","BoilingVerdict","props","celsius","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","toCelsius","fahrenheit","fagrenheit","toFahrenheit","tryConvert","temperature","conver","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","Calculator","_s","setTemperature","scale","setScale","handleCelsiusChange","handleFahrenheitChange","onTemperatureChange","_c2","$RefreshReg$"],"sources":["/Users/hooniverse/Desktop/practice-app/src/chapter_12/Calculator.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport TemperatureInput  from \"./TemperatureInput\";\n\n\nfunction BoilingVerdict(props){\n    if( props.celsius >= 100){\n        return <p>물이 끓습니다.</p>;\n    }\n    return <p>물이 끓지 않습니다.</p>\n}\n\nfunction toCelsius(fahrenheit){\n    return ((fagrenheit - 32) * 5) / 9;\n}\n\nfunction toFahrenheit(celsius){\n    return (celsius *9) /5 +32;\n}\n\nfunction tryConvert(temperature, conver){\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)){\n        return \"\";\n    }\n    const output = conver(input);\n    const rounded = Math.round(output * 1000) /1000;\n    return rounded.toString();\n}\n\nfunction Calculator(props){\n    const [temperature, setTemperature] = useState(\"\");\n    const [scale, setScale] = useState(\"C\");\n\n    const handleCelsiusChange = (temperature) => {\n        setTemperature(temperature);\n        setScale(\"c\");\n    };\n\n    const handleFahrenheitChange = (temperature)=>{\n        setTemperature(temperature);\n        setScale(\"f\");\n    };\n\n    const celsius =\n        scale === \"f\" ? tryConvert(temperature, toCelsius) : temperature;\n\n    const fahrenheit =\n        scale === \"c\" ? tryConvert(temperature, toFahrenheit) : temperature;    \n\n\n    return (\n        <div>\n            <TemperatureInput\n                scale=\"c\"\n                temperature={celsius}\n                onTemperatureChange={handleCelsiusChange}\n            />\n            <TemperatureInput\n                scale=\"f\"\n                temperature={fahrenheit}\n                onTemperatureChange={handleFahrenheitChange}\n            />\n            <BoilingVerdict celsius={parseFloat(celsius)}/>\n        </div>\n    );\n}\n\nexport default Calculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}